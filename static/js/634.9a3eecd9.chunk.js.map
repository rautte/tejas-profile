{"version":3,"file":"static/js/634.9a3eecd9.chunk.js","mappings":"uKAyBO,SAASA,IACd,MAAMC,EAfR,WACE,KAAKC,EAAAA,EAAAA,MAAUC,OAAQ,CACrB,MAAMC,EAAOC,OAAeC,YAAc,CACxCC,OAAQ,eACRC,WAAY,mBACZC,YAAa,cACbC,UAAW,kBACXC,MAAO,gBAETC,EAAAA,EAAAA,IAAcR,EAChB,CACA,OAAOS,EAAAA,EAAAA,KACT,CAGaC,GAEX,MAAO,CACL,YAAMC,CAAOC,GACX,MAAMC,GAAUC,EAAAA,EAAAA,IAAIjB,EAAI,SAASe,YACdG,EAAAA,EAAAA,IAAIF,IACbG,gBAAgBC,EAAAA,EAAAA,IAAIJ,EAAS,CAAEK,OAAQ,IACnD,EACA,UAAMC,CAAKP,GAET,MAAMC,GAAUC,EAAAA,EAAAA,IAAIjB,EAAI,SAASe,YACdG,EAAAA,EAAAA,IAAIF,IACbG,gBAAgBC,EAAAA,EAAAA,IAAIJ,EAAS,CAAEK,OAAQ,IACnD,EACA,WAAME,CAAMC,GACV,EAEF,YAAMC,CAAOV,EAAQW,GACnB,MAAMC,GAAUV,EAAAA,EAAAA,IAAIjB,EAAI,SAASe,YAC3Ba,GAAOC,EAAAA,EAAAA,IAAKF,SACZP,EAAAA,EAAAA,IAAIQ,EAAMF,EAClB,EACAI,UAAAA,CAAWf,EAAQgB,GACjB,MAAMf,GAAUC,EAAAA,EAAAA,IAAIjB,EAAI,SAASe,KAC3BiB,GAAOC,EAAAA,EAAAA,IAAQjB,EAAUkB,IAC7B,MAAMC,EAAMD,EAAEC,OAAS,CAAEd,OAAQ,IAC3Be,EAAiB,CAAEf,OAAQgB,MAAMC,QAAQH,EAAId,QAAUc,EAAId,OAASkB,OAAOC,OAAOL,EAAId,QAAU,CAAC,IAEvGe,EAAKf,OAAOoB,KAAK,CAACC,EAAQC,KAAM,IAAAC,EAAAC,EAAA,OAAU,QAALD,EAACF,EAAEI,UAAE,IAAAF,EAAAA,EAAI,IAAU,QAATC,EAAKF,EAAEG,UAAE,IAAAD,EAAAA,EAAI,KAC5Dd,EAAGK,KAEL,MAAO,KAAMW,EAAAA,EAAAA,IAAI/B,EAAS,QAASgB,EACrC,EAEJ,C","sources":["lib/mp/adapters/firebase.ts"],"sourcesContent":["// Very small Firebase Realtime Database adapter.\n// 1) npm i firebase\n// 2) put your keys in a <script> tag or env and pass here as needed.\n//    For simplicity we read from window.__FIREBASE (optional).\n\nimport { initializeApp, getApps } from \"firebase/app\";\nimport {\n  getDatabase, ref, set, push, onValue, off, get,\n} from \"firebase/database\";\nimport type { MPAdapter, MPEvent, Snapshot } from \"../index\";\n\nfunction ensureApp() {\n  if (!getApps().length) {\n    const cfg = (window as any).__FIREBASE || {\n      apiKey: \"YOUR_API_KEY\",\n      authDomain: \"YOUR_AUTH_DOMAIN\",\n      databaseURL: \"YOUR_DB_URL\",\n      projectId: \"YOUR_PROJECT_ID\",\n      appId: \"YOUR_APP_ID\",\n    };\n    initializeApp(cfg);\n  }\n  return getDatabase();\n}\n\nexport function firebaseAdapter(): MPAdapter {\n  const db = ensureApp();\n\n  return {\n    async create(roomId) {\n      const roomRef = ref(db, `rooms/${roomId}`);\n      const snap = await get(roomRef);\n      if (!snap.exists()) await set(roomRef, { events: [] });\n    },\n    async join(roomId) {\n      // touch the room to ensure it exists\n      const roomRef = ref(db, `rooms/${roomId}`);\n      const snap = await get(roomRef);\n      if (!snap.exists()) await set(roomRef, { events: [] });\n    },\n    async leave(_roomId) {\n      // noop (no connection state we must tear down)\n    },\n    async append(roomId, ev: MPEvent) {\n      const listRef = ref(db, `rooms/${roomId}/events`);\n      const node = push(listRef);\n      await set(node, ev);\n    },\n    onSnapshot(roomId, cb) {\n      const roomRef = ref(db, `rooms/${roomId}`);\n      const stop = onValue(roomRef, (s) => {\n        const val = s.val() || { events: [] };\n        const snap: Snapshot = { events: Array.isArray(val.events) ? val.events : Object.values(val.events || {}) };\n        // sort by ts for determinism\n        snap.events.sort((a: any, b: any) => (a.ts ?? 0) - (b.ts ?? 0));\n        cb(snap);\n      });\n      return () => off(roomRef, \"value\", stop as any);\n    },\n  };\n}\n"],"names":["firebaseAdapter","db","getApps","length","cfg","window","__FIREBASE","apiKey","authDomain","databaseURL","projectId","appId","initializeApp","getDatabase","ensureApp","create","roomId","roomRef","ref","get","exists","set","events","join","leave","_roomId","append","ev","listRef","node","push","onSnapshot","cb","stop","onValue","s","val","snap","Array","isArray","Object","values","sort","a","b","_a$ts","_b$ts","ts","off"],"sourceRoot":""}